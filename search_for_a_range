Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].

这个题比较简单，因为是升序排列的，所以只要找到左右的下标就可以了，代码如下所示
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int len = nums.size();
        vector<int> res;
        if(0 == len || nums[0] > target || nums[len - 1] < target) {
            res.push_back(-1);
            res.push_back(-1);
            return res;
        }
        int left = 0, right = len - 1;
        while(nums[left] < target) {
            left++;
        }
        while(nums[right] > target) {
            right--;
        }
        if(left > right) {
            res.push_back(-1);
            res.push_back(-1);
            return res;
        }
        res.push_back(left);
        res.push_back(right);
        return res;  
    }
};