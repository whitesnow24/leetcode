Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.

这道题一眼看上去特别的简单，但是里面有很多特殊的情况，一定要进行考虑，首先是第一个不连续的正整数，这里要注意，还有就是如果数组为[1，1，0，2，2]的时候返回的是3，所以查找的时候要注意去除重复的元素再进行查找。代码实现如下：
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        nums.erase(unique(nums.begin(), nums.end()), nums.end());
        int len = nums.size();
        int target = 1;
        for(int i = 0; i < len; i++) {
            if(target == nums[i]) {
                for(int j = i; j < len; j++) {
                    if(nums[j] != target) {
                        return target;
                    }
                    
                    target++;
                }
            }
        }
        return target;
    }
};