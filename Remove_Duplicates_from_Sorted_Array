Given a sorted array, remove the duplicates in-place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

Example:

Given nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.
It doesn't matter what you leave beyond the new length.

这是一道很简单的题目，注意只要改变nums种的数字的顺序，并返回互不相同元素的len就可以了，代码如下：
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(0 == nums.size()) {
            return 0;
        }
        int len = 1, i = 1;
        while(i < nums.size()) {
            if(nums[i] != nums[i - 1]) {
                nums[len] = nums[i];
                len++;
                i++;
                continue;
            }
            i++;
        }
        return len;
    }
};
